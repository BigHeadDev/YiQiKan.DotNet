<Page
    x:Class="YiQiKan.DotNet.UWP.AppShellPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:animatedvisuals="using:Microsoft.UI.Xaml.Controls.AnimatedVisuals"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:local="using:YiQiKan.DotNet.UWP"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:ui="using:Microsoft.Toolkit.Uwp.UI"
    xmlns:vm="using:YiQiKan.DotNet.Core.ViewModel"
    d:DataContext="{d:DesignInstance Type=vm:MainViewModel}"
    muxc:BackdropMaterial.ApplyToRootOrPageBackground="True"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    mc:Ignorable="d">
    <Page.Resources>
        <SolidColorBrush x:Key="ButtonForegroundColor" Color="{ThemeResource SystemBaseHighColor}" />
        <SolidColorBrush x:Key="ButtonInactiveForegroundBrush" Color="{ThemeResource SystemChromeDisabledLowColor}" />
        <SolidColorBrush x:Key="ButtonHoverBackgroundBrush" Color="{ThemeResource SystemListLowColor}" />
        <SolidColorBrush x:Key="ButtonHoverForegroundBrush" Color="{ThemeResource SystemBaseHighColor}" />
        <SolidColorBrush x:Key="ButtonPressedBackgroundBrush" Color="{ThemeResource SystemListMediumColor}" />
        <SolidColorBrush x:Key="ButtonPressedForegroundBrush" Color="{ThemeResource SystemBaseHighColor}" />
    </Page.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="60" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <StackPanel
                Margin="5,0"
                VerticalAlignment="Center"
                Orientation="Horizontal">
                <Button Style="{StaticResource CommandBarFlyoutEllipsisButtonStyle}" Visibility="{Binding App.IsBackButtonVisible}">
                    <i:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Click">
                            <core:CallMethodAction MethodName="GoBack" TargetObject="{Binding ElementName=rootFrame}" />
                        </core:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                    <muxc:AnimatedIcon Width="15" Height="15">
                        <muxc:AnimatedIcon.Source>
                            <animatedvisuals:AnimatedBackVisualSource />
                        </muxc:AnimatedIcon.Source>
                        <muxc:AnimatedIcon.FallbackIconSource>
                            <muxc:SymbolIconSource Symbol="Back" />
                        </muxc:AnimatedIcon.FallbackIconSource>
                    </muxc:AnimatedIcon>
                </Button>
                <ToggleButton
                    IsChecked="{Binding App.IsMenuOpen, Mode=TwoWay}"
                    Style="{StaticResource DateTimePickerFlyoutButtonStyle}"
                    Visibility="{Binding App.IsMenuButtonVisible}">
                    <muxc:AnimatedIcon Width="15" Height="15">
                        <muxc:AnimatedIcon.Source>
                            <animatedvisuals:AnimatedGlobalNavigationButtonVisualSource />
                        </muxc:AnimatedIcon.Source>
                        <muxc:AnimatedIcon.FallbackIconSource>
                            <muxc:SymbolIconSource Symbol="GlobalNavigationButton" />
                        </muxc:AnimatedIcon.FallbackIconSource>
                    </muxc:AnimatedIcon>
                </ToggleButton>
            </StackPanel>
            <Grid
                x:Name="AppTitleBar"
                Grid.Column="1"
                HorizontalAlignment="Stretch"
                Background="Transparent"
                IsHitTestVisible="True" />
            <Grid Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="140" />
                </Grid.ColumnDefinitions>
                <StackPanel
                    Grid.Column="0"
                    IsHitTestVisible="False"
                    Orientation="Horizontal">
                    <Image
                        x:Name="AppFontIcon"
                        Width="20"
                        Height="20"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Source="/Assets/Images/Logo.png" />
                    <TextBlock
                        x:Name="AppTitle"
                        Margin="12,0,0,0"
                        VerticalAlignment="Center"
                        Style="{StaticResource CaptionTextBlockStyle}"
                        Text="{Binding Title}"
                        Visibility="Collapsed" />
                </StackPanel>
                <Grid
                    x:Name="gridSearchBox"
                    Grid.Column="1"
                    MaxWidth="500"
                    Margin="20,0"
                    Visibility="{Binding App.IsSearchBoxVisible}">
                    <AutoSuggestBox
                        x:Name="suggestBox"
                        x:Uid="SuggestBox"
                        VerticalAlignment="Center"
                        IsHitTestVisible="True"
                        QueryIcon="Find"
                        Text="{Binding KeyWordsInput, Mode=TwoWay}">
                        <i:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="QuerySubmitted">
                                <core:InvokeCommandAction Command="{Binding QuerySubmittedCommand}" InputConverter="{StaticResource AutoSuggestBoxQuerySubmittedEventArgsConverter}" />
                            </core:EventTriggerBehavior>
                        </i:Interaction.Behaviors>
                        <AutoSuggestBox.TextBoxStyle>
                            <Style TargetType="TextBox">
                                <Setter Property="Padding" Value="45,8,0,8" />
                            </Style>
                        </AutoSuggestBox.TextBoxStyle>
                    </AutoSuggestBox>

                    <ToggleButton
                        x:Name="rankButton"
                        x:Uid="RankButton"
                        Style="{StaticResource DateTimePickerFlyoutButtonStyle}"
                        Visibility="{Binding IsHotSearchItemsVisible}" />
                    <muxc:TeachingTip
                        x:Name="searchRankTeachingTip"
                        x:Uid="SearchRankTeachingTip"
                        IsLightDismissEnabled="True"
                        IsOpen="{Binding ElementName=rankButton, Path=IsChecked, Mode=TwoWay}"
                        PreferredPlacement="Bottom"
                        Target="{x:Bind rankButton}">
                        <muxc:TeachingTip.Content>
                            <Pivot ItemsSource="{Binding HotSearchItems}">
                                <Pivot.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding title}" />
                                    </DataTemplate>
                                </Pivot.HeaderTemplate>
                                <Pivot.ItemTemplate>
                                    <DataTemplate>
                                        <ListView
                                            x:Name="listHotWords"
                                            MaxHeight="300"
                                            ui:FrameworkElementExtensions.AncestorType="Pivot"
                                            IsItemClickEnabled="True"
                                            ItemClick="ListView_ItemClick"
                                            ItemsSource="{Binding list}"
                                            SelectionMode="None">
                                            <i:Interaction.Behaviors>
                                                <core:EventTriggerBehavior EventName="ItemClick">
                                                    <core:InvokeCommandAction Command="{Binding (ui:FrameworkElementExtensions.Ancestor).DataContext.HotwordsClickCommand, ElementName=listHotWords, Mode=TwoWay}" InputConverter="{StaticResource ItemClickEventArgsConverter}" />
                                                </core:EventTriggerBehavior>
                                            </i:Interaction.Behaviors>
                                            <ListView.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding name}" />
                                                </DataTemplate>
                                            </ListView.ItemTemplate>
                                        </ListView>
                                    </DataTemplate>
                                </Pivot.ItemTemplate>
                            </Pivot>

                        </muxc:TeachingTip.Content>
                    </muxc:TeachingTip>
                </Grid>

            </Grid>
        </Grid>
        <Frame x:Name="rootFrame" Grid.Row="1">
            <Frame.ContentTransitions>
                <TransitionCollection>
                    <NavigationThemeTransition />
                </TransitionCollection>
            </Frame.ContentTransitions>

            <!--  初始页面是SplashPage  -->
            <local:SplashPage />
        </Frame>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="640" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="AppTitle.Visibility">
                            <Setter.Value>
                                <Visibility>Visible</Visibility>
                            </Setter.Value>
                        </Setter>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="AppTitle.Visibility">
                            <Setter.Value>
                                <Visibility>Collapsed</Visibility>
                            </Setter.Value>
                        </Setter>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
